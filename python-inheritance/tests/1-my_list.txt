Module: "my_list"
================

>>> MyList = __import__('1-my_list').MyList
>>>
-------------------------------------------

Using MyList:
-------------

# Create a MyList object and add some elements
>>> my_list = MyList([3, 1, 2])

# Test the print_sorted method
>>> my_list.print_sorted()
[1, 2, 3]

# Add more elements to the MyList
>>> my_list.extend([5, 4])

# Test print_sorted after adding more elements
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

>>> my_list2 = MyList([10])
>>> my_list2.print_sorted()
[10]

>>> my_list3 = MyList([-9, 8, -4, -4, 5, 6, 7, 8, 9, 10])
>>> my_list3.print_sorted()
[-9, -4, -4, 5, 6, 7, 8, 8, 9, 10]

>>> a = []
>>> my_list4 = MyList(a)
>>> my_list4.print_sorted()
[]

>>> my_list5 = [1, 2, 3]
>>> my_list5.print_sorted()
Traceback (most recent call last):
    ...
AttributeError: 'list' object has no attribute 'print_sorted'

>>> my_list6 = MyList([1, 1])
>>> my_list6.print_sorted()
[1, 1]

>>> b = [1, 2, 3]
>>> my_list7 = MyList(b)
>>> my_list7.print_sorted()
[1, 2, 3]

Check print_sorted returns a new list:
>>> my_list8 = MyList([1, 2, 3])
>>> my_list8.print_sorted() == [1, 2, 3]
[1, 2, 3]
False

Check with append():
>>> my_list9 = MyList([1, 2, 3])
>>> my_list9.append(4)
>>> my_list9.print_sorted()
[1, 2, 3, 4]

Check __str__():
>>> my_list10 = MyList([1, 2, 3])
>>> print(my_list10)
[1, 2, 3]
